function : void bitxor() {

    int a = 2;
    const int b = 10;

    // Unknown at compile time
    const int c = 2 ^ b; // pass
    const int d = a ^ 1; // Error - y not known at compile time
    const int e = a ^ b; // Pass - both consts
    int f = z ^ x; // Pass

    int g = 2 ^ 3; // Do constant folding
    const int h = 2 ^ 3; // Do constant folding

    const int i = 5 ^ 6; // pass
    const int j = 5 ^ 6 ^ 19 ^ 23; // pass
    const float k = 5.8 ^ 6.0; // fail - incompatible types
    const bool l = 5 ^ 6; // fail - Incompatible types
}

function : void bitor() {
    int a = 2;
    const int b = 10;

    // Unknown at compile time
    const int c = 2 | b; // pass
    const int d = a | 1; // Error - y not known at compile time
    const int e = a | b; // Pass - both consts
    int f = z | x; // Pass

    int g = 2 | 3; // Do constant folding
    const int h = 2 | 3; // Do constant folding

    const int i = 5 | 6; // pass
    const int j = 5 | 6 | 19 | 23; // pass
    const float k = 5.8 | 6.0; // fail - incompatible types
    const bool l = 5 | 6; // fail - Incompatible types
}

function : void bitand() {
    int a = 2;
    const int b = 10;

    // Unknown at compile time
    const int c = 2 & b; // pass
    const int d = a & 1; // Error - y not known at compile time
    const int e = a & b; // Pass - both consts
    int f = z & x; // Pass

    int g = 2 & 3; // Do constant folding
    const int h = 2 & 3; // Do constant folding

    const int i = 5 & 6; // pass
    const int j = 5 & 6 & 19 & 23; // pass
    const float k = 5.8 & 6.0;
    const bool l = 5 & 6; // fail - Incompatible types
}
